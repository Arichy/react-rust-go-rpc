syntax = "proto3";

package person;

import "google/protobuf/timestamp.proto";

option go_package = "example.com/go-connect-backend/gen;person";

// used in list
message PersonBrief {
  string id = 1;
  string name = 2;
  string email = 3;
  int32 age = 4;
}

// used in detail
message Person {
  string id = 1;
  string name = 2;
  string email = 3;
  int32 age = 4;
  google.protobuf.Timestamp created_at = 5;
  google.protobuf.Timestamp updated_at = 6;
  string address = 7;
}

// Request message for creating a new person
message CreatePersonRequest {
  string name = 1;
  string email = 2;
  int32 age = 3;
}

// Response message for creating a new person
message CreatePersonResponse { Person person = 1; }

// Request message for retrieving a person by ID
message GetPersonRequest { string id = 1; }

// Response message for getting a person
message GetPersonResponse { Person person = 1; }

// Request message for updating a person
message UpdatePersonRequest {
  string id = 1;
  optional string name = 2;
  optional string email = 3;
  optional int32 age = 4;
  optional string address = 5;
}

// Response message for updating a person
message UpdatePersonResponse { Person person = 1; }

// Request message for deleting a person
message DeletePersonRequest { string id = 1; }

// Response message for deleting a person
message DeletePersonResponse { bool success = 1; }

// Request message for listing people
message ListPeopleRequest {
  // Optional pagination fields
  optional int32 page_size = 1;
  optional string page_token = 2;
}

// Response message for listing people
message ListPeopleResponse {
  repeated PersonBrief people = 1;
  string next_page_token = 2;
}

// The PersonService provides CRUD operations for managing people
service PersonService {
  // Create a new person
  rpc CreatePerson(CreatePersonRequest) returns (CreatePersonResponse);

  // Get a person by ID
  rpc GetPerson(GetPersonRequest) returns (GetPersonResponse);

  // Update an existing person
  rpc UpdatePerson(UpdatePersonRequest) returns (UpdatePersonResponse);

  // Delete a person by ID
  rpc DeletePerson(DeletePersonRequest) returns (DeletePersonResponse);

  // List all people with optional pagination
  rpc ListPeople(ListPeopleRequest) returns (ListPeopleResponse);
}
